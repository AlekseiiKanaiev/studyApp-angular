/**Одним из ключевых элементов приложения являются компоненты.
  * Компонент управляет отображением представления на экране.
*/
/**Для создания компонента необходимо импортировать функцию
 * декоратора @Component из библиотеки @angular/core.
*/
import { Component } from '@angular/core';
/**Декоратор @Component позволяет идентифицировать класс как
 * компонент.
*/
@Component({
    /**Декоратор @Component в качестве параметра принимает объект
     * с конфигурацией, которая указывает фреймворку, как работать
     * с компонентом и его представлением.
     * */
    /**Свойство selector определяет селектор CSS.
     * В элемент с этим селектором Angular будет добавлять
     * представление компонента.
     * */
    selector: 'app-components-comp',
    /**С помощью свойства template. Шаблон представляет кусок
     * разметки HTML с вкраплениями кода Angular.
     * Фактически шаблон это и есть представление, которое увидит
     * пользователь при работе с приложением.
     * Каждый компонент должен иметь один шаблон.
     * Однако необязательно определять шаблон напрямую с помощью
     * свойства template. Можно вынести шаблон во внешний файл
     * с разметкой html, а для его подключения использовать
     * свойство templateUrl.
     * */
    templateUrl: './components.component.html',
    /**Стилизация компонента может производиться как с помощью
     * установки стилей в самом компоненте, так и с помощью
     * подключения внешних css-файлов.
     * Для установки стилей в директиве @Component определено
     * свойство styles.
     * Селектор :host ссылается на элемент, в котором хостится
     * компонент. */
    styles: [
      `h1, h2{
        color:navy;
      }
      p{
        font-size: 14px;
        font-family: Verdana;
      }
      :host{
        color:red;
      }`
    ]
    /**При использовании стилей следует учитывать, что они
     * применяются локально только к разметке, управляемой
     * компонентом.
     * Например, если на странице будут элементы вне области
     * управления компонентом, то к ним уже не будут применяться стили */
})
/**Чтобы класс мог использоваться в других модулях, он
  * определяется с ключевым словом export.
  * В самом же классе определена лишь одна переменная,
  * которая в качестве значения хранит некоторую строку.
*/
// Класс компонента:
export class ComponentsComponent {
    name = 'A';
}
